@model VasyanStore.Client.Models.GameViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">

    @using (Html.BeginForm())
    {
        <div class="form-group">
            @*<label for="Name">Name:</label>
                <input id="Name" name="Name" class="form-control" type="text" />*@

            @Html.LabelFor(x => x.Name)
            @Html.EditorFor(x => x.Name, new { htmlAttributes = new { @class = "form-control", @type = "text" } })
            @Html.ValidationMessageFor(x => x.Name)
        </div>
        <div class="form-group">
            @*<label for="Price">Price:</label>*@
            @Html.LabelFor(x => x.Price)

            @*<input id="Price" name="Price" class="form-control" type="number" />*@
            @Html.EditorFor(x => x.Price, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
            @Html.ValidationMessageFor(x => x.Price)
        </div>
        <div class="form-group">
            @*<label>ReleaseDate:</label>
                <input class="form-control" type="date" />*@

            @Html.LabelFor(x => x.ReleaseDate)
            @Html.EditorFor(x => x.ReleaseDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
            @Html.ValidationMessageFor(x => x.ReleaseDate)
        </div>
        <div class="form-group">
            @*<label>Genre:</label>
                <input class="form-control" type="text" />*@

            @Html.LabelFor(x => x.Genre)
            <select id="Genre" name="Genre" class="form-control">
                @foreach (var genre in ViewBag.Genres)
                {
                    <option>@genre</option>
                }
            </select>

            @*@Html.EditorFor(x => x.Genre, new { htmlAttributes = new { @class = "form-control", @type = "text" } })*@
        </div>
        <div class="form-group">
            @*<label>Developer:</label>
                <input class="form-control" type="text" />*@

            @Html.LabelFor(x => x.Developer)

            <select id="Developer" name="Developer" class="form-control">
                @foreach (var dev in ViewBag.Developers)
                {
                    <option>@dev</option>
                }
            </select>

            @*@Html.EditorFor(x => x.Developer, new { htmlAttributes = new { @class = "form-control", @type = "text" } })*@
        </div>
        <div class="form-group">
            <input type="submit" class="btn btn-success w-100" value="Add" />
        </div>
    }


    @*@using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>GameViewModel</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Genre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Developer, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Developer, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Developer, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }*@

    @*<div>
            @Html.ActionLink("Back to List", "Index")
        </div>*@

</div>

